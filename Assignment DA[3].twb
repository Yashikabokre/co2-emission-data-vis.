<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='owid-co2-data' inline='true' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-co2-data' name='textscan.0o07vk705hitap19v6idg16oji26'>
            <connection class='textscan' directory='C:/Users/HP/Downloads' filename='owid-co2-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0o07vk705hitap19v6idg16oji26' name='owid-co2-data.csv' table='[owid-co2-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='string' name='iso_code' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='real' name='gdp' ordinal='4' />
            <column datatype='real' name='cement_co2' ordinal='5' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='6' />
            <column datatype='real' name='co2' ordinal='7' />
            <column datatype='real' name='co2_growth_abs' ordinal='8' />
            <column datatype='real' name='co2_growth_prct' ordinal='9' />
            <column datatype='real' name='co2_including_luc' ordinal='10' />
            <column datatype='real' name='co2_including_luc_growth_abs' ordinal='11' />
            <column datatype='real' name='co2_including_luc_growth_prct' ordinal='12' />
            <column datatype='real' name='co2_including_luc_per_capita' ordinal='13' />
            <column datatype='real' name='co2_including_luc_per_gdp' ordinal='14' />
            <column datatype='real' name='co2_including_luc_per_unit_energy' ordinal='15' />
            <column datatype='real' name='co2_per_capita' ordinal='16' />
            <column datatype='real' name='co2_per_gdp' ordinal='17' />
            <column datatype='real' name='co2_per_unit_energy' ordinal='18' />
            <column datatype='real' name='coal_co2' ordinal='19' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='20' />
            <column datatype='real' name='consumption_co2' ordinal='21' />
            <column datatype='real' name='consumption_co2_per_capita' ordinal='22' />
            <column datatype='real' name='consumption_co2_per_gdp' ordinal='23' />
            <column datatype='real' name='cumulative_cement_co2' ordinal='24' />
            <column datatype='real' name='cumulative_co2' ordinal='25' />
            <column datatype='real' name='cumulative_co2_including_luc' ordinal='26' />
            <column datatype='real' name='cumulative_coal_co2' ordinal='27' />
            <column datatype='real' name='cumulative_flaring_co2' ordinal='28' />
            <column datatype='real' name='cumulative_gas_co2' ordinal='29' />
            <column datatype='real' name='cumulative_luc_co2' ordinal='30' />
            <column datatype='real' name='cumulative_oil_co2' ordinal='31' />
            <column datatype='string' name='cumulative_other_co2' ordinal='32' />
            <column datatype='real' name='energy_per_capita' ordinal='33' />
            <column datatype='real' name='energy_per_gdp' ordinal='34' />
            <column datatype='real' name='flaring_co2' ordinal='35' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='36' />
            <column datatype='real' name='gas_co2' ordinal='37' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='38' />
            <column datatype='real' name='ghg_excluding_lucf_per_capita' ordinal='39' />
            <column datatype='real' name='ghg_per_capita' ordinal='40' />
            <column datatype='real' name='land_use_change_co2' ordinal='41' />
            <column datatype='real' name='land_use_change_co2_per_capita' ordinal='42' />
            <column datatype='real' name='methane' ordinal='43' />
            <column datatype='real' name='methane_per_capita' ordinal='44' />
            <column datatype='real' name='nitrous_oxide' ordinal='45' />
            <column datatype='real' name='nitrous_oxide_per_capita' ordinal='46' />
            <column datatype='real' name='oil_co2' ordinal='47' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='48' />
            <column datatype='string' name='other_co2_per_capita' ordinal='49' />
            <column datatype='string' name='other_industry_co2' ordinal='50' />
            <column datatype='real' name='primary_energy_consumption' ordinal='51' />
            <column datatype='real' name='share_global_cement_co2' ordinal='52' />
            <column datatype='real' name='share_global_co2' ordinal='53' />
            <column datatype='real' name='share_global_co2_including_luc' ordinal='54' />
            <column datatype='real' name='share_global_coal_co2' ordinal='55' />
            <column datatype='real' name='share_global_cumulative_cement_co2' ordinal='56' />
            <column datatype='real' name='share_global_cumulative_co2' ordinal='57' />
            <column datatype='real' name='share_global_cumulative_co2_including_luc' ordinal='58' />
            <column datatype='real' name='share_global_cumulative_coal_co2' ordinal='59' />
            <column datatype='real' name='share_global_cumulative_flaring_co2' ordinal='60' />
            <column datatype='real' name='share_global_cumulative_gas_co2' ordinal='61' />
            <column datatype='real' name='share_global_cumulative_luc_co2' ordinal='62' />
            <column datatype='real' name='share_global_cumulative_oil_co2' ordinal='63' />
            <column datatype='string' name='share_global_cumulative_other_co2' ordinal='64' />
            <column datatype='real' name='share_global_flaring_co2' ordinal='65' />
            <column datatype='real' name='share_global_gas_co2' ordinal='66' />
            <column datatype='real' name='share_global_luc_co2' ordinal='67' />
            <column datatype='real' name='share_global_oil_co2' ordinal='68' />
            <column datatype='string' name='share_global_other_co2' ordinal='69' />
            <column datatype='real' name='share_of_temperature_change_from_ghg' ordinal='70' />
            <column datatype='real' name='temperature_change_from_ch4' ordinal='71' />
            <column datatype='real' name='temperature_change_from_co2' ordinal='72' />
            <column datatype='real' name='temperature_change_from_ghg' ordinal='73' />
            <column datatype='real' name='temperature_change_from_n2o' ordinal='74' />
            <column datatype='real' name='total_ghg' ordinal='75' />
            <column datatype='real' name='total_ghg_excluding_lucf' ordinal='76' />
            <column datatype='real' name='trade_co2' ordinal='77' />
            <column datatype='real' name='trade_co2_share' ordinal='78' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>gdp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_abs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_abs]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_growth_abs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_including_luc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_including_luc]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_including_luc</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_including_luc_growth_abs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_including_luc_growth_abs]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_including_luc_growth_abs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_including_luc_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_including_luc_growth_prct]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_including_luc_growth_prct</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_including_luc_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_including_luc_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_including_luc_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_including_luc_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_including_luc_per_gdp]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_including_luc_per_gdp</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_including_luc_per_unit_energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_including_luc_per_unit_energy]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_including_luc_per_unit_energy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_gdp]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_per_gdp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_unit_energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_unit_energy]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>co2_per_unit_energy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>consumption_co2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>consumption_co2_per_capita</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consumption_co2_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[consumption_co2_per_gdp]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>consumption_co2_per_gdp</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_cement_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_cement_co2</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2_including_luc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2_including_luc]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_co2_including_luc</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_coal_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_coal_co2</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_flaring_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_flaring_co2</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_gas_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_gas_co2</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_luc_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_luc_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_luc_co2</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_oil_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_oil_co2</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_other_co2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cumulative_other_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>cumulative_other_co2</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>energy_per_capita</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_per_gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_per_gdp]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>energy_per_gdp</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ghg_excluding_lucf_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ghg_excluding_lucf_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>ghg_excluding_lucf_per_capita</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ghg_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ghg_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>ghg_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land_use_change_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land_use_change_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>land_use_change_co2</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land_use_change_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land_use_change_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>land_use_change_co2_per_capita</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>methane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[methane]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>methane</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>methane_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[methane_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>methane_per_capita</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nitrous_oxide</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nitrous_oxide]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>nitrous_oxide</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nitrous_oxide_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nitrous_oxide_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>nitrous_oxide_per_capita</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>primary_energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[primary_energy_consumption]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>primary_energy_consumption</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cement_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cement_co2</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_co2</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_co2_including_luc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_co2_including_luc]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_co2_including_luc</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_coal_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_coal_co2</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_cement_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_cement_co2</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_co2</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_co2_including_luc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_co2_including_luc]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_co2_including_luc</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_coal_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_coal_co2</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_flaring_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_flaring_co2</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_gas_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_gas_co2</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_luc_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_luc_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_luc_co2</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_cumulative_oil_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_oil_co2</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_cumulative_other_co2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[share_global_cumulative_other_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_cumulative_other_co2</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_flaring_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_flaring_co2</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_gas_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_gas_co2</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_luc_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_luc_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_luc_co2</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_global_oil_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_oil_co2</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_global_other_co2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[share_global_other_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_global_other_co2</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_of_temperature_change_from_ghg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_of_temperature_change_from_ghg]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>share_of_temperature_change_from_ghg</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_change_from_ch4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_change_from_ch4]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>temperature_change_from_ch4</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_change_from_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_change_from_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>temperature_change_from_co2</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_change_from_ghg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_change_from_ghg]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>temperature_change_from_ghg</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_change_from_n2o</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_change_from_n2o]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>temperature_change_from_n2o</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_ghg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_ghg]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>total_ghg</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_ghg_excluding_lucf</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_ghg_excluding_lucf]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>total_ghg_excluding_lucf</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>trade_co2</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[owid-co2-data.csv]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_1416382091150614528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='gdp per capita' datatype='real' name='[Calculation_875950137293803520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[gdp]/[population]' />
      </column>
      <column caption='owid-co2-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Abs' datatype='real' name='[co2_growth_abs]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Including Luc' datatype='real' name='[co2_including_luc]' role='measure' type='quantitative' />
      <column caption='Co2 Including Luc Growth Abs' datatype='real' name='[co2_including_luc_growth_abs]' role='measure' type='quantitative' />
      <column caption='Co2 Including Luc Growth Prct' datatype='real' name='[co2_including_luc_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Including Luc Per Capita' datatype='real' name='[co2_including_luc_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 Including Luc Per Gdp' datatype='real' name='[co2_including_luc_per_gdp]' role='measure' type='quantitative' />
      <column caption='Co2 Including Luc Per Unit Energy' datatype='real' name='[co2_including_luc_per_unit_energy]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2 Per Gdp' datatype='real' name='[co2_per_gdp]' role='measure' type='quantitative' />
      <column caption='Co2 Per Unit Energy' datatype='real' name='[co2_per_unit_energy]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Consumption Co2' datatype='real' name='[consumption_co2]' role='measure' type='quantitative' />
      <column caption='Consumption Co2 Per Capita' datatype='real' name='[consumption_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Consumption Co2 Per Gdp' datatype='real' name='[consumption_co2_per_gdp]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Cement Co2' datatype='real' name='[cumulative_cement_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Co2 Including Luc' datatype='real' name='[cumulative_co2_including_luc]' role='measure' type='quantitative' />
      <column caption='Cumulative Coal Co2' datatype='real' name='[cumulative_coal_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Flaring Co2' datatype='real' name='[cumulative_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Gas Co2' datatype='real' name='[cumulative_gas_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Luc Co2' datatype='real' name='[cumulative_luc_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Oil Co2' datatype='real' name='[cumulative_oil_co2]' role='measure' type='quantitative' />
      <column caption='Cumulative Other Co2' datatype='string' name='[cumulative_other_co2]' role='dimension' type='nominal' />
      <column caption='Energy Per Capita' datatype='real' name='[energy_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy Per Gdp' datatype='real' name='[energy_per_gdp]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
      <column caption='Ghg Excluding Lucf Per Capita' datatype='real' name='[ghg_excluding_lucf_per_capita]' role='measure' type='quantitative' />
      <column caption='Ghg Per Capita' datatype='real' name='[ghg_per_capita]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Land Use Change Co2' datatype='real' name='[land_use_change_co2]' role='measure' type='quantitative' />
      <column caption='Land Use Change Co2 Per Capita' datatype='real' name='[land_use_change_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Methane' datatype='real' name='[methane]' role='measure' type='quantitative' />
      <column caption='Methane Per Capita' datatype='real' name='[methane_per_capita]' role='measure' type='quantitative' />
      <column caption='Nitrous Oxide' datatype='real' name='[nitrous_oxide]' role='measure' type='quantitative' />
      <column caption='Nitrous Oxide Per Capita' datatype='real' name='[nitrous_oxide_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='string' name='[other_co2_per_capita]' role='dimension' type='nominal' />
      <column caption='Other Industry Co2' datatype='string' name='[other_industry_co2]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Primary Energy Consumption' datatype='real' name='[primary_energy_consumption]' role='measure' type='quantitative' />
      <column caption='Share Global Cement Co2' datatype='real' name='[share_global_cement_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Co2' datatype='real' name='[share_global_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Co2 Including Luc' datatype='real' name='[share_global_co2_including_luc]' role='measure' type='quantitative' />
      <column caption='Share Global Coal Co2' datatype='real' name='[share_global_coal_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Cement Co2' datatype='real' name='[share_global_cumulative_cement_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Co2' datatype='real' name='[share_global_cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Co2 Including Luc' datatype='real' name='[share_global_cumulative_co2_including_luc]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Coal Co2' datatype='real' name='[share_global_cumulative_coal_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Flaring Co2' datatype='real' name='[share_global_cumulative_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Gas Co2' datatype='real' name='[share_global_cumulative_gas_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Luc Co2' datatype='real' name='[share_global_cumulative_luc_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Oil Co2' datatype='real' name='[share_global_cumulative_oil_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Cumulative Other Co2' datatype='string' name='[share_global_cumulative_other_co2]' role='dimension' type='nominal' />
      <column caption='Share Global Flaring Co2' datatype='real' name='[share_global_flaring_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Gas Co2' datatype='real' name='[share_global_gas_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Luc Co2' datatype='real' name='[share_global_luc_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Oil Co2' datatype='real' name='[share_global_oil_co2]' role='measure' type='quantitative' />
      <column caption='Share Global Other Co2' datatype='string' name='[share_global_other_co2]' role='dimension' type='nominal' />
      <column caption='Share Of Temperature Change From Ghg' datatype='real' name='[share_of_temperature_change_from_ghg]' role='measure' type='quantitative' />
      <column caption='Temperature Change From Ch4' datatype='real' name='[temperature_change_from_ch4]' role='measure' type='quantitative' />
      <column caption='Temperature Change From Co2' datatype='real' name='[temperature_change_from_co2]' role='measure' type='quantitative' />
      <column caption='Temperature Change From Ghg' datatype='real' name='[temperature_change_from_ghg]' role='measure' type='quantitative' />
      <column caption='Temperature Change From N2O' datatype='real' name='[temperature_change_from_n2o]' role='measure' type='quantitative' />
      <column caption='Total Ghg' datatype='real' name='[total_ghg]' role='measure' type='quantitative' />
      <column caption='Total Ghg Excluding Lucf' datatype='real' name='[total_ghg_excluding_lucf]' role='measure' type='quantitative' />
      <column caption='Trade Co2' datatype='real' name='[trade_co2]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_growth_abs]' derivation='Sum' name='[sum:co2_growth_abs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_including_luc_growth_abs]' derivation='Sum' name='[sum:co2_including_luc_growth_abs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_including_luc_growth_prct]' derivation='Sum' name='[sum:co2_including_luc_growth_prct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_including_luc_per_gdp]' derivation='Sum' name='[sum:co2_including_luc_per_gdp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_including_luc_per_unit_energy]' derivation='Sum' name='[sum:co2_including_luc_per_unit_energy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_gdp]' derivation='Sum' name='[sum:co2_per_gdp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_unit_energy]' derivation='Sum' name='[sum:co2_per_unit_energy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[consumption_co2]' derivation='Sum' name='[sum:consumption_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[consumption_co2_per_capita]' derivation='Sum' name='[sum:consumption_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[consumption_co2_per_gdp]' derivation='Sum' name='[sum:consumption_co2_per_gdp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_cement_co2]' derivation='Sum' name='[sum:cumulative_cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2_including_luc]' derivation='Sum' name='[sum:cumulative_co2_including_luc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_coal_co2]' derivation='Sum' name='[sum:cumulative_coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_flaring_co2]' derivation='Sum' name='[sum:cumulative_flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_gas_co2]' derivation='Sum' name='[sum:cumulative_gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_luc_co2]' derivation='Sum' name='[sum:cumulative_luc_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_oil_co2]' derivation='Sum' name='[sum:cumulative_oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[energy_per_capita]' derivation='Sum' name='[sum:energy_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[energy_per_gdp]' derivation='Sum' name='[sum:energy_per_gdp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ghg_excluding_lucf_per_capita]' derivation='Sum' name='[sum:ghg_excluding_lucf_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ghg_per_capita]' derivation='Sum' name='[sum:ghg_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[land_use_change_co2]' derivation='Sum' name='[sum:land_use_change_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[land_use_change_co2_per_capita]' derivation='Sum' name='[sum:land_use_change_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[methane]' derivation='Sum' name='[sum:methane:qk]' pivot='key' type='quantitative' />
      <column-instance column='[methane_per_capita]' derivation='Sum' name='[sum:methane_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nitrous_oxide]' derivation='Sum' name='[sum:nitrous_oxide:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nitrous_oxide_per_capita]' derivation='Sum' name='[sum:nitrous_oxide_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[primary_energy_consumption]' derivation='Sum' name='[sum:primary_energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cement_co2]' derivation='Sum' name='[sum:share_global_cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_co2]' derivation='Sum' name='[sum:share_global_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_co2_including_luc]' derivation='Sum' name='[sum:share_global_co2_including_luc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_coal_co2]' derivation='Sum' name='[sum:share_global_coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_cement_co2]' derivation='Sum' name='[sum:share_global_cumulative_cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_co2]' derivation='Sum' name='[sum:share_global_cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_co2_including_luc]' derivation='Sum' name='[sum:share_global_cumulative_co2_including_luc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_coal_co2]' derivation='Sum' name='[sum:share_global_cumulative_coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_flaring_co2]' derivation='Sum' name='[sum:share_global_cumulative_flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_gas_co2]' derivation='Sum' name='[sum:share_global_cumulative_gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_luc_co2]' derivation='Sum' name='[sum:share_global_cumulative_luc_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_cumulative_oil_co2]' derivation='Sum' name='[sum:share_global_cumulative_oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_flaring_co2]' derivation='Sum' name='[sum:share_global_flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_gas_co2]' derivation='Sum' name='[sum:share_global_gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_luc_co2]' derivation='Sum' name='[sum:share_global_luc_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_global_oil_co2]' derivation='Sum' name='[sum:share_global_oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share_of_temperature_change_from_ghg]' derivation='Sum' name='[sum:share_of_temperature_change_from_ghg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_change_from_ch4]' derivation='Sum' name='[sum:temperature_change_from_ch4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_change_from_co2]' derivation='Sum' name='[sum:temperature_change_from_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_change_from_ghg]' derivation='Sum' name='[sum:temperature_change_from_ghg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temperature_change_from_n2o]' derivation='Sum' name='[sum:temperature_change_from_n2o:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_ghg]' derivation='Sum' name='[sum:total_ghg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_ghg_excluding_lucf]' derivation='Sum' name='[sum:total_ghg_excluding_lucf:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_co2]' derivation='Sum' name='[sum:trade_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_including_luc_per_unit_energy:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:trade_co2_share:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_of_temperature_change_from_ghg:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_growth_prct:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:temperature_change_from_n2o:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:ghg_excluding_lucf_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_co2:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_including_luc_growth_abs:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:energy_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_co2:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:total_ghg:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:nitrous_oxide:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_luc_co2:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:oil_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:temperature_change_from_ch4:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:consumption_co2_per_gdp:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:methane:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_including_luc_growth_prct:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:energy_per_gdp:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_co2_including_luc:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:total_ghg_excluding_lucf:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:coal_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:ghg_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:consumption_co2:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:land_use_change_co2:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_luc_co2:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[__tableau_internal_object_id__].[cnt:owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:methane_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_co2_including_luc:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_co2:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:nitrous_oxide_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_per_gdp:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:gas_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_co2_including_luc:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_including_luc_per_gdp:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:trade_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cement_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:temperature_change_from_co2:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:consumption_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:land_use_change_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_per_unit_energy:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:gdp:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:share_global_cumulative_coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_growth_abs:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:cumulative_luc_co2:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:primary_energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:temperature_change_from_ghg:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Middle East (GCP)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central America (GCP)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;International aviation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OECD (GCP)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;International shipping&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Least developed countries (Jones et al.)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;South America (GCP)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asia (excl. China and India)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ryukyu Islands (GCP)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Europe (GCP)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;European Union (28)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#de5d1f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OECD (Jones et al.)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Non-OECD (GCP)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwaiti Oil Fires (GCP)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;North America (GCP)&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asia (GCP)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oceania (GCP)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa (GCP)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='gdp' />
        <field-sort-custom-order field='cement_co2' />
        <field-sort-custom-order field='cement_co2_per_capita' />
        <field-sort-custom-order field='co2' />
        <field-sort-custom-order field='co2_growth_abs' />
        <field-sort-custom-order field='co2_growth_prct' />
        <field-sort-custom-order field='co2_including_luc' />
        <field-sort-custom-order field='co2_including_luc_growth_abs' />
        <field-sort-custom-order field='co2_including_luc_growth_prct' />
        <field-sort-custom-order field='co2_including_luc_per_capita' />
        <field-sort-custom-order field='co2_including_luc_per_gdp' />
        <field-sort-custom-order field='co2_including_luc_per_unit_energy' />
        <field-sort-custom-order field='co2_per_capita' />
        <field-sort-custom-order field='co2_per_gdp' />
        <field-sort-custom-order field='co2_per_unit_energy' />
        <field-sort-custom-order field='coal_co2' />
        <field-sort-custom-order field='coal_co2_per_capita' />
        <field-sort-custom-order field='consumption_co2' />
        <field-sort-custom-order field='consumption_co2_per_capita' />
        <field-sort-custom-order field='consumption_co2_per_gdp' />
        <field-sort-custom-order field='cumulative_cement_co2' />
        <field-sort-custom-order field='cumulative_co2' />
        <field-sort-custom-order field='cumulative_co2_including_luc' />
        <field-sort-custom-order field='Calculation_875950137293803520' />
        <field-sort-custom-order field='cumulative_coal_co2' />
        <field-sort-custom-order field='cumulative_flaring_co2' />
        <field-sort-custom-order field='cumulative_gas_co2' />
        <field-sort-custom-order field='cumulative_luc_co2' />
        <field-sort-custom-order field='cumulative_oil_co2' />
        <field-sort-custom-order field='cumulative_other_co2' />
        <field-sort-custom-order field='energy_per_capita' />
        <field-sort-custom-order field='energy_per_gdp' />
        <field-sort-custom-order field='flaring_co2' />
        <field-sort-custom-order field='flaring_co2_per_capita' />
        <field-sort-custom-order field='gas_co2' />
        <field-sort-custom-order field='gas_co2_per_capita' />
        <field-sort-custom-order field='ghg_excluding_lucf_per_capita' />
        <field-sort-custom-order field='ghg_per_capita' />
        <field-sort-custom-order field='land_use_change_co2' />
        <field-sort-custom-order field='land_use_change_co2_per_capita' />
        <field-sort-custom-order field='methane' />
        <field-sort-custom-order field='methane_per_capita' />
        <field-sort-custom-order field='nitrous_oxide' />
        <field-sort-custom-order field='nitrous_oxide_per_capita' />
        <field-sort-custom-order field='oil_co2' />
        <field-sort-custom-order field='oil_co2_per_capita' />
        <field-sort-custom-order field='other_co2_per_capita' />
        <field-sort-custom-order field='other_industry_co2' />
        <field-sort-custom-order field='primary_energy_consumption' />
        <field-sort-custom-order field='share_global_cement_co2' />
        <field-sort-custom-order field='share_global_co2' />
        <field-sort-custom-order field='share_global_co2_including_luc' />
        <field-sort-custom-order field='share_global_coal_co2' />
        <field-sort-custom-order field='share_global_cumulative_cement_co2' />
        <field-sort-custom-order field='share_global_cumulative_co2' />
        <field-sort-custom-order field='share_global_cumulative_co2_including_luc' />
        <field-sort-custom-order field='share_global_cumulative_coal_co2' />
        <field-sort-custom-order field='share_global_cumulative_flaring_co2' />
        <field-sort-custom-order field='share_global_cumulative_gas_co2' />
        <field-sort-custom-order field='share_global_cumulative_luc_co2' />
        <field-sort-custom-order field='share_global_cumulative_oil_co2' />
        <field-sort-custom-order field='share_global_cumulative_other_co2' />
        <field-sort-custom-order field='share_global_flaring_co2' />
        <field-sort-custom-order field='share_global_gas_co2' />
        <field-sort-custom-order field='share_global_luc_co2' />
        <field-sort-custom-order field='share_global_oil_co2' />
        <field-sort-custom-order field='share_global_other_co2' />
        <field-sort-custom-order field='share_of_temperature_change_from_ghg' />
        <field-sort-custom-order field='temperature_change_from_ch4' />
        <field-sort-custom-order field='temperature_change_from_co2' />
        <field-sort-custom-order field='temperature_change_from_ghg' />
        <field-sort-custom-order field='temperature_change_from_n2o' />
        <field-sort-custom-order field='total_ghg' />
        <field-sort-custom-order field='total_ghg_excluding_lucf' />
        <field-sort-custom-order field='trade_co2' />
        <field-sort-custom-order field='trade_co2_share' />
        <field-sort-custom-order field='Calculation_1416382091150614528' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Forecast Indicator' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='owid-co2-data.csv' id='owid-co2-data.csv_A727978D52C648538A7B003E29BDDFF6'>
            <properties context=''>
              <relation connection='textscan.0o07vk705hitap19v6idg16oji26' name='owid-co2-data.csv' table='[owid-co2-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='iso_code' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='real' name='gdp' ordinal='4' />
                  <column datatype='real' name='cement_co2' ordinal='5' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='6' />
                  <column datatype='real' name='co2' ordinal='7' />
                  <column datatype='real' name='co2_growth_abs' ordinal='8' />
                  <column datatype='real' name='co2_growth_prct' ordinal='9' />
                  <column datatype='real' name='co2_including_luc' ordinal='10' />
                  <column datatype='real' name='co2_including_luc_growth_abs' ordinal='11' />
                  <column datatype='real' name='co2_including_luc_growth_prct' ordinal='12' />
                  <column datatype='real' name='co2_including_luc_per_capita' ordinal='13' />
                  <column datatype='real' name='co2_including_luc_per_gdp' ordinal='14' />
                  <column datatype='real' name='co2_including_luc_per_unit_energy' ordinal='15' />
                  <column datatype='real' name='co2_per_capita' ordinal='16' />
                  <column datatype='real' name='co2_per_gdp' ordinal='17' />
                  <column datatype='real' name='co2_per_unit_energy' ordinal='18' />
                  <column datatype='real' name='coal_co2' ordinal='19' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='20' />
                  <column datatype='real' name='consumption_co2' ordinal='21' />
                  <column datatype='real' name='consumption_co2_per_capita' ordinal='22' />
                  <column datatype='real' name='consumption_co2_per_gdp' ordinal='23' />
                  <column datatype='real' name='cumulative_cement_co2' ordinal='24' />
                  <column datatype='real' name='cumulative_co2' ordinal='25' />
                  <column datatype='real' name='cumulative_co2_including_luc' ordinal='26' />
                  <column datatype='real' name='cumulative_coal_co2' ordinal='27' />
                  <column datatype='real' name='cumulative_flaring_co2' ordinal='28' />
                  <column datatype='real' name='cumulative_gas_co2' ordinal='29' />
                  <column datatype='real' name='cumulative_luc_co2' ordinal='30' />
                  <column datatype='real' name='cumulative_oil_co2' ordinal='31' />
                  <column datatype='string' name='cumulative_other_co2' ordinal='32' />
                  <column datatype='real' name='energy_per_capita' ordinal='33' />
                  <column datatype='real' name='energy_per_gdp' ordinal='34' />
                  <column datatype='real' name='flaring_co2' ordinal='35' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='36' />
                  <column datatype='real' name='gas_co2' ordinal='37' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='38' />
                  <column datatype='real' name='ghg_excluding_lucf_per_capita' ordinal='39' />
                  <column datatype='real' name='ghg_per_capita' ordinal='40' />
                  <column datatype='real' name='land_use_change_co2' ordinal='41' />
                  <column datatype='real' name='land_use_change_co2_per_capita' ordinal='42' />
                  <column datatype='real' name='methane' ordinal='43' />
                  <column datatype='real' name='methane_per_capita' ordinal='44' />
                  <column datatype='real' name='nitrous_oxide' ordinal='45' />
                  <column datatype='real' name='nitrous_oxide_per_capita' ordinal='46' />
                  <column datatype='real' name='oil_co2' ordinal='47' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='48' />
                  <column datatype='string' name='other_co2_per_capita' ordinal='49' />
                  <column datatype='string' name='other_industry_co2' ordinal='50' />
                  <column datatype='real' name='primary_energy_consumption' ordinal='51' />
                  <column datatype='real' name='share_global_cement_co2' ordinal='52' />
                  <column datatype='real' name='share_global_co2' ordinal='53' />
                  <column datatype='real' name='share_global_co2_including_luc' ordinal='54' />
                  <column datatype='real' name='share_global_coal_co2' ordinal='55' />
                  <column datatype='real' name='share_global_cumulative_cement_co2' ordinal='56' />
                  <column datatype='real' name='share_global_cumulative_co2' ordinal='57' />
                  <column datatype='real' name='share_global_cumulative_co2_including_luc' ordinal='58' />
                  <column datatype='real' name='share_global_cumulative_coal_co2' ordinal='59' />
                  <column datatype='real' name='share_global_cumulative_flaring_co2' ordinal='60' />
                  <column datatype='real' name='share_global_cumulative_gas_co2' ordinal='61' />
                  <column datatype='real' name='share_global_cumulative_luc_co2' ordinal='62' />
                  <column datatype='real' name='share_global_cumulative_oil_co2' ordinal='63' />
                  <column datatype='string' name='share_global_cumulative_other_co2' ordinal='64' />
                  <column datatype='real' name='share_global_flaring_co2' ordinal='65' />
                  <column datatype='real' name='share_global_gas_co2' ordinal='66' />
                  <column datatype='real' name='share_global_luc_co2' ordinal='67' />
                  <column datatype='real' name='share_global_oil_co2' ordinal='68' />
                  <column datatype='string' name='share_global_other_co2' ordinal='69' />
                  <column datatype='real' name='share_of_temperature_change_from_ghg' ordinal='70' />
                  <column datatype='real' name='temperature_change_from_ch4' ordinal='71' />
                  <column datatype='real' name='temperature_change_from_co2' ordinal='72' />
                  <column datatype='real' name='temperature_change_from_ghg' ordinal='73' />
                  <column datatype='real' name='temperature_change_from_n2o' ordinal='74' />
                  <column datatype='real' name='total_ghg' ordinal='75' />
                  <column datatype='real' name='total_ghg_excluding_lucf' ordinal='76' />
                  <column datatype='real' name='trade_co2' ordinal='77' />
                  <column datatype='real' name='trade_co2_share' ordinal='78' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_612758B4B7384DB19FD78469F0BA0770]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_5895CE9E13AC489895C7D43FAE365421]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_4561BF0F41F44E45AA5B45100DD02AC8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_28DFE806F14F4146A45417452D486A69]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_C30C7A1D176E4907A13A6035AF7FC436]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1.To identify what are the top 10 countries with the highest CO₂ emission.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Anguilla&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Aruba&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bermuda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;British Virgin Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Christmas Island&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Congo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cook Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Curacao&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Democratic Republic of Congo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;East Timor&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;French Polynesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Gambia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Greenland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kosovo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires (GCP)&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Macao&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia (country)&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Monaco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Montserrat&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Caledonia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Niue&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania (GCP)&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Palestine&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ryukyu Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Helena&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Lucia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Pierre and Miquelon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;San Marino&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Vatican&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Wallis and Futuna&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</column>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
              <text column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{CB7854B9-FC19-4CD5-AD7C-DF92206DE55D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.To identify how has global CO₂ emission changed year over year.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_5895CE9E13AC489895C7D43FAE365421]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' included-values='in-range'>
            <min>2000</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</column>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
              <size column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{74339C7B-EBBF-4A8D-9E86-D04A0F3B49DC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3.To identify which continent contributes most to global CO₂ emissions?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:year:ok]' user:ui-action-filter='[Action4_4561BF0F41F44E45AA5B45100DD02AC8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Andorra&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Angola&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Anguilla&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antigua and Barbuda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Aruba&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China and India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Azerbaijan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahamas&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Barbados&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Belize&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bermuda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bolivia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Botswana&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;British Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Burkina Faso&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Burundi&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cape Verde&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Central African Republic&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Central America (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Chad&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Christmas Island&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Comoros&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Congo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cook Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Costa Rica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cuba&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Curacao&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Czechia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Democratic Republic of Congo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Djibouti&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominican Republic&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;East Timor&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ecuador&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;El Salvador&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Equatorial Guinea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Eritrea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Eswatini&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ethiopia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;European Union (28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Faroe Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Fiji&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;French Polynesia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Gambia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Greenland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Grenada&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea-Bissau&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Haiti&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;High-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Honduras&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International aviation&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International shipping&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kazakhstan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kiribati&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kosovo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kyrgyzstan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Least developed countries (Jones et al.)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lesotho&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Liberia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Libya&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Low-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lower-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Macao&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Madagascar&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Malawi&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mali&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia (country)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Middle East (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Monaco&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Montserrat&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Myanmar&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nauru&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;New Caledonia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nicaragua&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Niue&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Non-OECD (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North Korea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;OECD (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;OECD (Jones et al.)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oman&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Palau&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Palestine&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Panama&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Papua New Guinea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Rwanda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ryukyu Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ryukyu Islands (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Helena&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Lucia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Pierre and Miquelon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Samoa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;San Marino&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sao Tome and Principe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Seychelles&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sierra Leone&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Solomon Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sri Lanka&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sudan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Suriname&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tajikistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Togo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tonga&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkmenistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tuvalu&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Uganda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Upper-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Vatican&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Wallis and Futuna&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Yemen&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Zambia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' included-values='all' />
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</column>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</column>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' />
              <wedge-size column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
              <size column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
              <text column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' />
              <text column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{87D8F667-6F88-4A3A-B3DE-280C009D3C4B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>4.To identify  the per capita CO₂ emission for top economies.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Consumption Co2' datatype='real' name='[consumption_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([consumption_co2])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]</cols>
      </table>
      <simple-id uuid='{4E543094-C055-4D70-A1E7-EEE39619A933}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>5.To identify how have CO₂ emissions from coal, oil, and gas changed over time.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_5895CE9E13AC489895C7D43FAE365421]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' included-values='all' />
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</column>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</column>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:oil_co2:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:coal_co2:qk] + ([federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:gas_co2:qk] + [federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:oil_co2:qk]))</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{355EDFA9-0B60-427C-879A-771499A30FD4}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>6.To Compare historical emissions of USA, China, and India.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Algeria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Andorra&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Angola&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Anguilla&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antigua and Barbuda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Aruba&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China and India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Azerbaijan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahamas&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Barbados&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Belize&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Benin&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bermuda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bolivia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Botswana&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;British Virgin Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Burkina Faso&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Burundi&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cape Verde&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Central African Republic&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Central America (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Chad&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Christmas Island&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Comoros&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Congo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cook Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Costa Rica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cuba&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Curacao&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Czechia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Democratic Republic of Congo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Djibouti&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominican Republic&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;East Timor&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ecuador&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;El Salvador&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Equatorial Guinea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Eritrea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Eswatini&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ethiopia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;European Union (27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;European Union (28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Faroe Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Fiji&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;French Polynesia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Gabon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Gambia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Greenland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Grenada&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea-Bissau&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Guyana&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Haiti&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;High-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Honduras&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International aviation&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International shipping&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kazakhstan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kiribati&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kosovo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Kyrgyzstan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Laos&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Least developed countries (Jones et al.)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lesotho&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Liberia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Libya&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Low-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Lower-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Macao&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Madagascar&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Malawi&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mali&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Marshall Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia (country)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Middle East (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Monaco&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Montserrat&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Myanmar&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nauru&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;New Caledonia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nicaragua&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Niger&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Niue&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Non-OECD (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North Korea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North Macedonia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;OECD (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;OECD (Jones et al.)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Oman&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Palau&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Palestine&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Panama&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Papua New Guinea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Rwanda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ryukyu Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ryukyu Islands (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Helena&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Lucia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Pierre and Miquelon&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Samoa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;San Marino&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sao Tome and Principe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Seychelles&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sierra Leone&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Solomon Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America (GCP)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South Sudan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sri Lanka&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sudan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Suriname&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tajikistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tanzania&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Togo&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tonga&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tunisia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkmenistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Tuvalu&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Uganda&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Upper-middle-income countries&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Vatican&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Wallis and Futuna&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Yemen&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Zambia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' value='64' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{AE7150C2-0AC4-4C22-8CE8-96BCED060B0B}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>7.To  Forecast global CO₂ emissions for the next 10 years.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' forecast-column-base='[sum:co2:qk]' forecast-column-type='forecast-value' name='[fVal:sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[fVal:sum:co2:qk]' value='68' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[fVal:sum:co2:qk]</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='None' range-size='10' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{839A4C8E-52AE-42C4-8813-22222A259A83}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>8. To Correlate GDP per capita and CO₂ emissions per capita.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
          </datasources>
          <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
            <column caption='gdp per capita' datatype='real' name='[Calculation_875950137293803520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[gdp]/[population]' />
            </column>
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_875950137293803520]' derivation='Sum' name='[sum:Calculation_875950137293803520:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' included-values='in-range'>
            <min>2022</min>
            <max>2023</max>
          </filter>
          <slices>
            <column>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' />
              <lod column='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2_per_capita:qk]</rows>
        <cols>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:Calculation_875950137293803520:qk]</cols>
      </table>
      <simple-id uuid='{E2590F7F-1EF4-442C-8884-1F7EFA7F7122}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='owid-co2-data' name='federated.1uftyvw19bj0hj1giau1m01zbmh0' />
      </datasources>
      <datasource-dependencies datasource='federated.1uftyvw19bj0hj1giau1m01zbmh0'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='89378' x='483' y='940'>
              <zone h='49068' id='10' name='Sheet 2' w='36581' x='483' y='49992'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
              <zone h='49052' id='11' name='Sheet 3' w='36581' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
              <zone h='49052' id='14' name='Sheet 4' w='52797' x='37064' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
              <zone h='49068' id='15' name='Sheet 5' w='52797' x='37064' y='49992'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='18331' id='12' name='Sheet 3' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5993' id='13' name='Sheet 3' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type-v2='size' w='9656' x='89861' y='19271'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17979' id='114' mode='dropdown' name='Sheet 4' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type-v2='filter' values='database' w='9656' x='89861' y='25264'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='115' name='Sheet 2' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' type-v2='filter' values='database' w='9656' x='89861' y='43243'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#f5ead7' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='155' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='154' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='49052' id='11' is-fixed='true' name='Sheet 3' w='36581' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='18331' id='12' name='Sheet 3' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5993' id='13' name='Sheet 3' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type-v2='size' w='9656' x='89861' y='19271'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17979' id='114' mode='dropdown' name='Sheet 4' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type-v2='filter' values='database' w='9656' x='89861' y='25264'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49052' id='14' is-fixed='true' name='Sheet 4' w='52797' x='37064' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='8578' id='115' name='Sheet 2' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' type-v2='filter' values='database' w='9656' x='89861' y='43243'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49068' id='10' is-fixed='true' name='Sheet 2' w='36581' x='483' y='49992'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49068' id='15' is-fixed='true' name='Sheet 5' w='52797' x='37064' y='49992'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{78115862-D65A-437F-90DF-BB2EF52151A2}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='54797' x='483' y='940'>
              <zone h='49060' id='3' name='Sheet 6' w='54797' x='483' y='41668'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
              <zone h='40728' id='72' name='Sheet 1' w='54797' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
              <zone h='8332' id='8' name='Sheet 6' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type-v2='color' w='54797' x='483' y='90728'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5ead7' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='733' h='98120' id='103' is-fixed='true' type-v2='layout-basic' w='44237' x='55280' y='940'>
              <zone h='40668' id='6' param='vert' type-v2='layout-flow' w='44237' x='55280' y='940'>
                <zone h='40668' id='11' name='Sheet 8' w='44237' x='55280' y='940'>
                  <layout-cache minheight='213' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='57452' id='104' param='vert' type-v2='layout-flow' w='44237' x='55280' y='41608'>
                <zone fixed-size='443' h='52996' id='9' is-fixed='true' name='Sheet 7' w='44237' x='55280' y='41608'>
                  <layout-cache minheight='198' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='4456' id='74' name='Sheet 1' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type-v2='color' w='44237' x='55280' y='94604'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='156' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='155' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='280' h='40728' id='72' is-fixed='true' name='Sheet 1' w='54797' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='4456' id='74' name='Sheet 1' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type-v2='color' w='44237' x='55280' y='94604'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40668' id='11' is-fixed='true' name='Sheet 8' w='44237' x='55280' y='940'>
                  <layout-cache minheight='213' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52996' id='9' is-fixed='true' name='Sheet 7' w='44237' x='55280' y='41608'>
                  <layout-cache minheight='198' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='3' is-fixed='true' name='Sheet 6' w='54797' x='483' y='41668'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone h='8332' id='8' name='Sheet 6' pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type-v2='color' w='54797' x='483' y='90728'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9DFA41DB-5277-4721-940A-D2D804E0132E}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='6580' id='3' type-v2='text' w='23597' x='37477' y='7168'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='26'>Conclusion</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='80964' id='4' type-v2='text' w='89077' x='4828' y='14454'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>1. CO₂ emissions are dominated by a few countries, with China, USA, and India playing key roles.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>2. Global emissions are rising and are expected to continue unless interventions occur.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>3. Economic development correlates with emissions, but policy and technology can influence this relationship.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>4. Urgent global efforts are needed to manage emissions, especially in rapidly developing nations.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>5. Asia is the largest contributor to global CO₂ emissions, mainly due to industrial growth and population size.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>6. United States and China have the highest per capita emissions, indicating a high individual carbon footprint.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>7. Global CO₂ emissions are increasing year over year, showing no signs of slowing down.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>8. Coal remains a major source of CO₂ emissions, especially in rapidly developing countries.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='13' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone h='6580' id='3' type-v2='text' w='23597' x='37477' y='7168'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='26'>Conclusion</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='80964' id='4' type-v2='text' w='89077' x='4828' y='14454'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>1. CO₂ emissions are dominated by a few countries, with China, USA, and India playing key roles.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>2. Global emissions are rising and are expected to continue unless interventions occur.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>3. Economic development correlates with emissions, but policy and technology can influence this relationship.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>4. Urgent global efforts are needed to manage emissions, especially in rapidly developing nations.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>5. Asia is the largest contributor to global CO₂ emissions, mainly due to industrial growth and population size.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>6. United States and China have the highest per capita emissions, indicating a high individual carbon footprint.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>7. Global CO₂ emissions are increasing year over year, showing no signs of slowing down.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>8. Coal remains a major source of CO₂ emissions, especially in rapidly developing countries.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{64474C88-DBD2-4981-85A1-D1BF67D76524}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09328AFC-265B-4E5A-B269-9F7D6A601755}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[:Measure Names]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9689321F-87CA-4601-BB93-9E1B4DBC5A17}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{892B0115-B26D-4DDF-A036-F754A28A98F0}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B0F5C77-41C2-4F26-8496-652DB8993497}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:oil_co2:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A25776B-F791-474A-B4E0-E5B25A3E13B1}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DA3FCF1-D4D4-4E59-A438-8BADCD6CDFD6}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78071738-1FE8-4C23-8389-C127217FA404}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
            <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BCBCDD0-49BF-4531-A0E2-B5F347DC42A1}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</field>
                    <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[sum:co2:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2008</value>
                  <value>208095.33099999977</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight field='[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{4731886A-DB3B-4125-945B-A76C042C14D9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1uftyvw19bj0hj1giau1m01zbmh0].[none:year:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A4CE3561-9A77-4822-AE0C-7467E87555F4}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{307E356A-6B75-46BE-B6A2-3095F116E6D3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      aQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      ML4jwfidwlIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      WCNnACHW/H/16e3umOgiGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
